name: Test Matrix
on: ['pull_request']
defaults:
  run:
    shell: bash
jobs:
  PR-tests-linux:
    strategy:
      fail-fast: false
      matrix:
        dbimage: ['mysql:5.7', 'mysql:8.0', 'mariadb:latest']
        runner: [
          'swift:5.2-xenial', 'swift:5.2-bionic',
          'swiftlang/swift:nightly-5.2-xenial', 'swiftlang/swift:nightly-5.2-bionic',
          'swiftlang/swift:nightly-5.3-xenial', 'swiftlang/swift:nightly-5.3-bionic',
          'swiftlang/swift:nightly-master-xenial', 'swiftlang/swift:nightly-master-bionic',
          'swiftlang/swift:nightly-master-focal',
          'swiftlang/swift:nightly-master-centos8',
          'swiftlang/swift:nightly-master-amazonlinux2'
        ]
        include:
          - installcmd: 'apt-get -q update && apt-get -q install -y mysql-client'
          - { 'runner': 'swiftlang/swift:nightly-master-centos8', 'installcmd': 'dnf install -y zlib-devel mysql' }
          - { 'runner': 'swiftlang/swift:nightly-master-amazonlinux2', 'installcmd': 'yum install -y zlib-devel mysql' }
        exclude:
          - { 'runner': 'swiftlang/swift:nightly-master-amazonlinux2', 'dbimage': 'mysql:8.0' }
    container: ${{ matrix.runner }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: ${{ matrix.dbimage }}
        env: { MYSQL_ALLOW_EMPTY_PASSWORD: true, MYSQL_USER: vapor_username, MYSQL_PASSWORD: vapor_password }
    steps:
      - name: Install dependencies
        run: ${{ matrix.installcmd }}
      - name: Preconfigure MySQL client
        run: printf '[client]\nhost=mysql\n\n[mysql]\nbatch\n' >>/etc/my.cnf
      - name: Wait for MySQL server to be ready
        run: until echo | mysql; do sleep 1; done
        timeout-minutes: 5
      - name: Set up MySQL databases and privileges
        run: |
          for db in vapor_{database,benchmark{1,2}}; do mysql <<<"CREATE DATABASE $db; GRANT ALL PRIVILEGES ON $db.* TO vapor_username@'%';"; done
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        env: { 'MYSQL_HOSTNAME': 'mysql' }
  PR-tests-macos:
    strategy:
      fail-fast: false
      matrix:
        formula: ['mysql@8.0', 'mysql@5.7', 'mariadb']
        include:
          - username: root
          - { 'formula': 'mariadb', 'username': 'runner' }
    runs-on: macos-latest
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@1.0
        with: { 'xcode-version': 'latest' }
      - name: Install MySQL server from Homebrew
        run: brew install ${{ matrix.formula }} && brew link --force ${{ matrix.formula }}
      - name: Start MySQL server
        run: brew services start ${{ matrix.formula }}
      - name: Wait for MySQL server to be ready
        run: until echo | mysql -u${{ matrix.username }}; do sleep 1; done
        timeout-minutes: 5
      - name: Set up MySQL databases and privileges
        run: |
          mysql -u${{ matrix.username }} --batch <<-'SQL'
              CREATE USER vapor_username@localhost IDENTIFIED BY 'vapor_password';
              CREATE DATABASE vapor_database; GRANT ALL PRIVILEGES ON vapor_database.* TO vapor_username@localhost;
              CREATE DATABASE vapor_benchmark1; GRANT ALL PRIVILEGES ON vapor_benchmark1.* TO vapor_username@localhost;
              CREATE DATABASE vapor_benchmark2; GRANT ALL PRIVILEGES ON vapor_benchmark2.* TO vapor_username@localhost;
          SQL
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        env: { 'MYSQL_HOSTNAME': '127.0.0.1' }
